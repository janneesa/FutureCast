import React, { useState, useContext } from 'react';
import Card from './Card';

import { mockData } from '../data/MockData';

import { UserContext } from '../components/context/UserContext';

function PredictionInput({ addPrediction }) {
  const { user, setUser } = useContext(UserContext);

  const [predictionText, setPredictionText] = useState('');
  const [lastVoteDate, setLastVoteDate] = useState('');
  const [error, setError] = useState('');

  const handlePostPrediction = () => {
    if (!predictionText || !lastVoteDate) {
      setError('Both fields are required.');
      return;
    }

    const newPrediction = {
      // Generated by mongodb
      id: mockData.predictions.length + 1,
      userId: user.id, // Replace with actual id
      username: user.username, // Replace with actual username
      prediction: predictionText,
      agrees: [],
      disagrees: [],
      comments: 0,
      lastVoteDate: lastVoteDate,
      avatar: user.avatar,
    };

    addPrediction(newPrediction);
    addPredictionToUser(newPrediction);
    setPredictionText('');
    setLastVoteDate('');
    setError('');
  };

  const addPredictionToUser = (newPrediction) => {};

  const today = new Date().toISOString().split('T')[0];

  return (
    <Card>
      <div className='card-header'>
        <h2>Post a new prediction</h2>
        <p>Write and post your prediction about the future</p>
      </div>
      <div className='card-content'>
        <label htmlFor='prediction'>Prediction</label>
        <textarea
          id='prediction'
          value={predictionText}
          onChange={(e) => setPredictionText(e.target.value)}
          placeholder='I predict that...'
          className='input w-full resize-none'
        />
        <label htmlFor='lastVoteDay'>Vote until</label>
        <input
          id='lastVoteDay'
          type='date'
          value={lastVoteDate}
          onChange={(e) => setLastVoteDate(e.target.value)}
          className='input w-full'
          min={today}
        />
        <div className='mt-4'>
          <button onClick={handlePostPrediction} className='button'>
            Post Prediction
          </button>
          {error && <p className='text-red-600 m-4'>{error}</p>}
        </div>
      </div>
    </Card>
  );
}

export default PredictionInput;
