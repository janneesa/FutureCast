{
  "openapi": "3.0.0",
  "info": {
    "title": "FutureCast API",
    "version": "1.0.0",
    "description": "API for FutureCast, a platform for making predictions about the future"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api",
      "description": "Local Development Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Comment": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID of the user who created the comment"
          },
          "username": {
            "type": "string",
            "description": "Username of the user who created the comment"
          },
          "content": {
            "type": "string",
            "description": "Content of the comment"
          },
          "likes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of users who liked the comment"
          }
        },
        "required": ["content"]
      },
      "Prediction": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID of the user who created the prediction"
          },
          "username": {
            "type": "string",
            "description": "Username of the user who created the prediction"
          },
          "prediction": {
            "type": "string",
            "description": "Content of the prediction"
          },
          "agrees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of users who agreed with the prediction"
          },
          "disagrees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of users who disagreed with the prediction"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of comment IDs associated with the prediction"
          },
          "lastVoteDate": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last vote"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar URL of the user who created the prediction"
          },
          "category": {
            "type": "string",
            "description": "Category of the prediction"
          }
        },
        "required": ["prediction"]
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the user",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "description": "Username of the user",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "m@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "password"
          },
          "phone_number": {
            "type": "string",
            "description": "Phone number of the user",
            "example": "123-456-7890"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "Date of birth of the user",
            "example": "1990-01-01"
          },
          "bio": {
            "type": "string",
            "description": "Bio of the user",
            "example": ""
          },
          "followers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of followers of the user",
            "example": []
          },
          "following": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of users the user is following",
            "example": []
          },
          "predictions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of prediction IDs made by the user",
            "example": []
          },
          "badges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Badge name"
                },
                "description": {
                  "type": "string",
                  "description": "Badge description"
                }
              },
              "required": ["name", "description"]
            },
            "description": "List of badges awarded to the user",
            "example": []
          },
          "successfulPredictions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of successful predictions made by the user",
            "example": []
          },
          "predictionScore": {
            "type": "number",
            "description": "Score based on the user's predictions",
            "example": 0
          },
          "avatar": {
            "type": "string",
            "description": "URL of the user's avatar",
            "example": "https://example.com/avatar.jpg"
          },
          "settings": {
            "type": "object",
            "properties": {
              "notifications": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Email notifications setting",
                    "example": true
                  },
                  "push": {
                    "type": "boolean",
                    "description": "Push notifications setting",
                    "example": true
                  }
                },
                "required": ["email", "push"]
              },
              "preferences": {
                "type": "object",
                "properties": {
                  "darkMode": {
                    "type": "boolean",
                    "description": "Dark mode preference",
                    "example": false
                  }
                },
                "required": ["darkMode"]
              }
            },
            "description": "User's settings and preferences"
          }
        },
        "required": ["username", "email", "password"]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/comments": {
      "get": {
        "summary": "Get all comments",
        "operationId": "getAllComments",
        "tags": ["Comments"],
        "responses": {
          "200": {
            "description": "A list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new comment",
        "operationId": "createComment",
        "tags": ["Comments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}": {
      "get": {
        "summary": "Get a comment by ID",
        "operationId": "getCommentById",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found"
          }
        }
      },
      "put": {
        "summary": "Update a comment",
        "operationId": "updateComment",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a comment",
        "operationId": "deleteComment",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted comment"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/predictions": {
      "get": {
        "summary": "Get all predictions",
        "operationId": "getAllPredictions",
        "tags": ["Predictions"],
        "responses": {
          "200": {
            "description": "A list of predictions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prediction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new prediction",
        "operationId": "createPrediction",
        "tags": ["Predictions"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prediction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created prediction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prediction"
                }
              }
            }
          }
        }
      }
    },
    "/predictions/{predictionId}": {
      "get": {
        "summary": "Get a prediction by ID",
        "operationId": "getPredictionById",
        "tags": ["Predictions"],
        "parameters": [
          {
            "name": "predictionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested prediction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prediction"
                }
              }
            }
          },
          "404": {
            "description": "Prediction not found"
          }
        }
      },
      "put": {
        "summary": "Update a prediction",
        "operationId": "updatePrediction",
        "tags": ["Predictions"],
        "parameters": [
          {
            "name": "predictionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prediction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated prediction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prediction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a prediction",
        "operationId": "deletePrediction",
        "tags": ["Predictions"],
        "parameters": [
          {
            "name": "predictionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted prediction"
          },
          "404": {
            "description": "Prediction not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get a user by ID",
        "operationId": "getUserById",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "operationId": "updateUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the user"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user",
        "operationId": "loginUser",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "description": "User email" },
                  "password": {
                    "type": "string",
                    "description": "User password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
